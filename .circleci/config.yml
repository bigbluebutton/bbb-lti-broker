version: 2.1

jobs:
  bundle-install:
    working_directory: ~/repo
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          BUNDLE_JOBS: 4
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          DATABASE_URL: "postgresql://root@localhost/bbb_lti_broker_test?pool=5"
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          keys:
          - bundle-{{ arch }}-{{ checksum "Gemfile.lock" }}
          # We add "arch" as a key since some gems compile native code, like
          # nokogiri. If for whatever reason CircleCI runs the job on a machine
          # with a different architecture, the cache would be invalid.
      - run: bundle install
      - save_cache:
          paths:
            - ./vendor/bundle
          key: bundle-{{ arch }}-{{ checksum "Gemfile.lock" }}
      - persist_to_workspace:
          root: .
          paths:
            - vendor/bundle

  docker-build:
    machine: true
    steps:
      - checkout
      - run: docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
      - run: docker build -t bbb-lti-broker ./bbb-lti-broker
      - run: docker images
      - run: docker tag bbb-lti-broker $DOCKER_REPO/bbb-lti-broker
      - run: docker push $DOCKER_REPO/bbb-lti-broker

  test:
    machine: true
    steps:
      - run: docker-compose pull
      - run: docker-compose run app rake db:create
      - run: docker-compose run app rake db:migrate
      - run: docker-compose run app rake db:seed
      - run: docker-compose up -d
      - run: docker-compose down

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - bundle-install
      - docker-build
#      - test:
#          requires:
#            - bundle-install
#            - docker-build
#      - deploy-integration:
#          requires:
#            - test
#          filters:
#            branches:
#              only: master
